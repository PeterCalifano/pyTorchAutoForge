# List of TODOs

## Planned changelog for next releases

- [x] v0.1.3

- [ ] v0.1.4
  - [x] Add prototype implementation of heads and backbones builders using registries
  - [ ] Add abstract meta class for loss functions to enforce interface
  - [ ] Add prototype implementation of dataset classes from RAM/disk
  - [ ] Fix all unit tests
  - [x] Complete 1st version of model profiler
  - [ ] Add prototype of model explainer for vector-to-vector regression using Captum (2 methods)
  - [x] Add prototype of model explainer for vector-to-vector regression using SHAP (basic explainer)
  - [x] Add refactored version of augmentation pipeline (ImagesAugmentationHelper)
  - [x] Refactor and improve ModelTrainingManager updating augmentation pipeline and adding batch accumulation
  - [x] Improve and fix model evaluator
  - [x] Implement new adapter type for basic engineered feature maps (image, brightness masks, pre-processing filters)

- [ ] v0.1.5
  - [ ] Review NN and template blocks for modularity
  - [ ] Implement prototype usage of AMP for mixed precision training
  - [ ] Add configurable dataclasses from template yml files for training manager and extensible prototype (see pySR configuration in nav-frontend)
  - [ ] Add pySR conveniency module
  - [ ] Explore Hydra for configuration management from yml files

- [ ] v0.1.6
  - [ ] Improve docstrings in src code
  - [ ] Implement prototype of K-fold cross-validation for training runs
  - [ ] Extend ModelEvaluator to evaluate sklearn and xgb models

- [ ] v0.2.0
  - [ ] All those above
  - [ ] Add working argument parser for training scripts
  - [ ] Add configurable dataclasses from template yml files
  - [ ] Add prototype version of model hyperparams optim tuning with default params to search (scheduler, its parameters, batch size, num of epochs, what else?)
  - [ ] Add prototype of model explainer for image to vector regression using Captum

## Modules development notes (to allocate)

### Library management and config

- [x] Review linters/code formatting tools and configure them properly to comply with standards

- [ ] Add type annotations for mypy

- [ ] Automate documentation building process

- [x] Implement CI/CD to run tests

- [x] Configure project to use hatch build for automatic versioning linked to git tags

### Evaluation

- [ ]

### Optimization

- [ ]

### API module

- [ ] Add prototype implementation of mlflow api: MlflowHandler to replace manually written code in optimization module
- [ ] Add prototype implementation of telegram bot api for training push notifications
