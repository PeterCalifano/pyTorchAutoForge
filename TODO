# List of TODOs

## Planned changelog for next releases

- [x] v0.1.3

- [ ] v0.2.0
  - [x] Add prototype implementation of heads and backbones builders using registries
  - [ ] Add abstract meta class for loss functions to enforce interface
  - [x] Add prototype implementation of dataset classes from paths
  - [ ] Fix all unit tests
  - [x] Complete 1st version of model profiler
  - [x] Add prototype of model explainer for vector-to-vector regression using SHAP (basic explainer)
  - [x] Add refactored version of augmentation pipeline (ImagesAugmentationHelper)
  - [x] Refactor and improve ModelTrainingManager updating augmentation pipeline and adding batch accumulation
  - [x] Improve and fix model evaluator
  - [x] Implement new adapter type for basic engineered feature maps (image, brightness masks, pre-processing filters)
  - [x] Fix issues with device selection query and some imports
  - [x] Add support for automatic chaining of schedulers (todo debug learning rate update in Trainer?)
  - [x] Update Trainer to save checkpoints in subfolder with mlflow experiment name
  - [x] Upgrade translation augmentation to support translation of multiple (key)points
  - [x] Implement custom rotation augmentation to support rotation of multiple (key)points, through warping --> Using kornia Augmentation Sequential
  - [x] Update parametric template of CNN classes for different uses
  - [x] Add semi-automatic function to run model inference on sample input and save to disk with resulting predictions
  - [x] Implement Scaler adapter to store scaling factors for standalone input scaling (directly in forward)
  - [x] Add prototype of automatic MC dropout wrapper for NNs with dropout layers
  - [x] Review implementations and modify model parameters using register buffer/parameter where needed.
  - [x] Improve PTAF trainer: reduce on plateau scheduler, better stats for evalExample
  - [x] Implement prototype of labels containers from DatasetGeneratorLib and for general usage, with load/dump methods to/form yml and dict
  - [x] Improve ModelTrainingManager printing and save method
  - [ ] Implement export method (traced, onnx, model pth) in ModelTrainingManager
  - [x] Add automatic check of equivalence in model export helpers (onnx mainly)
  - [x] Modify mlflow logging to unpack dict and dataclasses and save each key separately (better grouping)
  - [x] Add automatic mixed precision support from torch
  - [x] Add optional validation check in Augmentation helper to ensure all inputs are valid ones with remedy action
  - [ ] Review checkpoint resuming code (ensure the checkpoint is loaded correctly) and add evaluation before training (baseline score)
  - [ ] Improve handling of training errors (stop and kill run if nan or Inf)

- [ ] v0.2.1
  - [ ] Upgrade PTAF trainer and loss function interfaces to support image segmentation tasks
  - [ ] Add batched bbox label generator using binary thresholded mask/image
  - [ ] Modify DataLoaderIndex to accept datasets directly and a combination of datasets and dataloaders. If dataset is input, use default specifications for dataloader
  - [ ] Implement new training mode: SWA_MODE
  - [ ] Add pruning strategy in NORMAL MODE using "delta loss" over patience interval to check for pruning (like OPTUNA)
  - [ ] Implement prototype usage of AMP for mixed precision training
  - [ ] Add configurable dataclasses from template yml files for training manager and extensible prototype (see pySR configuration in nav-frontend)
  - [ ] Add pySR conveniency module
  - [ ] Explore Hydra for configuration management from yml files
  - [ ] Add prototype of SHAP for CNNs
  - [ ] Add prototype of model explainer for vector-to-vector regression using Captum (2 methods)
  - [ ] Upgrade api.torch to save model "packages" with all info to run the model

- [ ] v0.2.2
  - [ ] Improve docstrings in src code
  - [ ] Implement prototype of K-fold cross-validation for training runs
  - [ ] Extend ModelEvaluator to evaluate sklearn and xgb models

- [ ] v0.3.0
  - [ ] All those above
  - [ ] Add working argument parser for training scripts
  - [ ] Add configurable dataclasses from template yml files
  - [ ] Add prototype version of model hyperparams optim tuning with default params to search (scheduler, its parameters, batch size, num of epochs, what else?)
  - [ ] Add prototype of model explainer for image to vector regression using Captum
  - [ ] Rework ModelTrainingManager to avoid inheritance of configuration

## Modules development notes (to allocate)

### Library management and config

- [x] Review linters/code formatting tools and configure them properly to comply with standards

- [ ] Add type annotations for mypy

- [ ] Automate documentation building process

- [x] Implement CI/CD to run tests

- [x] Configure project to use hatch build for automatic versioning linked to git tags

### Evaluation

- [ ]

### Optimization

- [ ]

### API module

- [ ] Add prototype implementation of mlflow api: MlflowHandler to replace manually written code in optimization module
- [ ] Add prototype implementation of telegram bot api for training push notifications
